{
  "editorPosition": "mainView",
  "attachShortcutToGlobalWindow": false,
  "globalNamespace": "MF",
  "formDefinitions": [
    {
      "title": "Example form",
      "name": "example-form",
      "fields": [
        {
          "name": "name",
          "label": "Name",
          "description": "It is named how?",
          "isRequired": true,
          "input": {
            "type": "text",
            "hidden": false
          }
        },
        {
          "name": "age",
          "label": "Age",
          "description": "How old",
          "isRequired": true,
          "input": {
            "type": "number",
            "hidden": false
          }
        },
        {
          "name": "dateOfBirth",
          "label": "Date of Birth",
          "description": "When were you born?",
          "input": {
            "type": "date",
            "hidden": false
          }
        },
        {
          "name": "timeOfDay",
          "label": "Time of day",
          "description": "The time you can do this",
          "input": {
            "type": "time",
            "hidden": false
          }
        },
        {
          "name": "is_family",
          "label": "Is family",
          "description": "If it is part of the family",
          "input": {
            "type": "toggle",
            "hidden": false
          }
        },
        {
          "name": "favorite_book",
          "label": "Favorite book",
          "description": "Pick one",
          "input": {
            "type": "note",
            "folder": "Books"
          }
        },
        {
          "name": "folder",
          "label": "The destination folder",
          "description": "It offers auto-completion to existing folders",
          "input": {
            "type": "folder"
          }
        },
        {
          "name": "multi_example",
          "label": "Multi select folder",
          "description": "Allows to pick many notes from a folder",
          "input": {
            "type": "multiselect",
            "source": "notes",
            "folder": "Books"
          }
        },
        {
          "name": "multi_example_2",
          "label": "Multi select fixed",
          "description": "Allows to pick many notes from a fixed list",
          "input": {
            "type": "multiselect",
            "source": "fixed",
            "multi_select_options": [
              "Android",
              "iOS",
              "Windows",
              "MacOS",
              "Linux",
              "Solaris",
              "MS2"
            ],
            "allowUnknownValues": false
          }
        },
        {
          "name": "multi_select_dataview",
          "label": "Multi select dataview",
          "description": "Allows to pick several values from a dv query",
          "input": {
            "type": "multiselect",
            "source": "dataview",
            "query": "dv.pages(\"#person\").map(p => p.file.name)",
            "allowUnknownValues": true
          }
        },
        {
          "name": "best_fried",
          "label": "Best friend",
          "description": "Select of type note from a folder",
          "input": {
            "type": "select",
            "source": "notes",
            "folder": "People"
          }
        },
        {
          "name": "dataview_example",
          "label": "Dataview example",
          "description": "Only people matching the dataview query will be shown",
          "input": {
            "type": "dataview",
            "query": "dv.pages(\"#person\").filter(p => p.age < 30).map(p => p.file.name)"
          }
        },
        {
          "name": "friendship_level",
          "label": "Friendship level",
          "description": "How good friends are you?",
          "input": {
            "type": "slider",
            "min": 0,
            "max": 10
          }
        },
        {
          "name": "favorite_meal",
          "label": "Favorite meal",
          "description": "Pick one option",
          "input": {
            "type": "select",
            "source": "fixed",
            "options": [
              {
                "value": "pizza",
                "label": "üçï Pizza"
              },
              {
                "value": "pasta",
                "label": "üçù Pasta"
              },
              {
                "value": "burger",
                "label": "üçî Burger"
              },
              {
                "value": "salad",
                "label": "ü•ó Salad"
              },
              {
                "value": "steak",
                "label": "ü•© Steak"
              },
              {
                "value": "sushi",
                "label": "üç£ Sushi"
              },
              {
                "value": "ramen",
                "label": "üçú Ramen"
              },
              {
                "value": "tacos",
                "label": "üåÆ Tacos"
              },
              {
                "value": "fish",
                "label": "üêü Fish"
              },
              {
                "value": "chicken",
                "label": "üçó Chicken"
              }
            ]
          }
        },
        {
          "name": "some notes",
          "label": "Multi line notes",
          "description": "Put your thoughts here",
          "input": {
            "type": "textarea",
            "hidden": false
          }
        },
        {
          "name": "hidden_field",
          "label": "This field is hidden",
          "description": "It is useful for internal data",
          "input": {
            "type": "text",
            "hidden": true
          }
        },
        {
          "name": "Tags",
          "description": "Tags input example",
          "input": {
            "type": "tag",
            "hidden": false
          }
        },
        {
          "name": "profile_picture",
          "label": "Profile Picture",
          "description": "Upload a profile picture. It will be saved in the attachments folder with the current date.",
          "input": {
            "type": "image",
            "filenameTemplate": "profile-{{datetime}}.png",
            "saveLocation": "attachments/profile_pictures"
          }
        },
        {
          "name": "pdf",
          "description": "PDF example",
          "input": {
            "type": "file",
            "folder": "attachments/pdfs",
            "allowedExtensions": [
              "pdf"
            ]
          }
        },
        {
          "name": "document",
          "description": "Document block example",
          "input": {
            "type": "document_block",
            "body": "return `Hello ${form.name}!<br> Your best friend is <b>${form.best_fried}</b>`"
          }
        }
      ],
      "version": "1"
    },
    {
      "title": "New Practice Log",
      "name": "Create New Practice Log",
      "fields": [
        {
          "name": "scenario",
          "label": "Select Scenario",
          "description": "",
          "isRequired": true,
          "input": {
            "type": "select",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üé≤ Scenarios"
          }
        },
        {
          "name": "people",
          "label": "People Involved",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "dataview",
            "query": "dv.pages('\"Personal/üë§ People\"')\n  .where(p => p.practice_lab === true)\n  .map(p => `[[${p.file.name}]]`)",
            "allowUnknownValues": false
          }
        },
        {
          "name": "rehearsal_mode",
          "label": "Rehearsal Mode",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "select",
            "source": "fixed",
            "options": [
              {
                "value": "Live Rehearsal",
                "label": "Live Rehearsal"
              },
              {
                "value": "Coaching",
                "label": "Coaching"
              },
              {
                "value": "Live Rehearsal & Coaching",
                "label": "Live Rehearsal & Coaching"
              }
            ]
          }
        },
        {
          "name": "meta_skills",
          "label": "Meta Skills",
          "description": "",
          "isRequired": false,
          "condition": {
            "dependencyName": "rehearsal_mode",
            "type": "contains",
            "value": "Coaching"
          },
          "input": {
            "type": "multiselect",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üó∫Ô∏è Skill Maps/üß¨ Meta Skills"
          }
        },
        {
          "name": "core_skills",
          "label": "Core Skills",
          "description": "",
          "isRequired": false,
          "condition": {
            "dependencyName": "rehearsal_mode",
            "type": "contains",
            "value": "Coaching"
          },
          "input": {
            "type": "multiselect",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üó∫Ô∏è Skill Maps/üó£Ô∏è Core Skills"
          }
        }
      ],
      "version": "1",
      "template": {
        "createInsertCommand": false,
        "createNoteCommand": true,
        "parsedTemplate": []
      }
    },
    {
      "title": "New Live Rehearsal",
      "name": "Create New Live Rehearsal",
      "fields": [
        {
          "name": "practice_log",
          "label": "Select Practice Session",
          "description": "",
          "isRequired": true,
          "input": {
            "type": "select",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üé¨ Practice Logs"
          }
        },
        {
          "name": "people",
          "label": "People Involved",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "dataview",
            "query": "dv.pages('\"Personal/üë§ People\"')\n  .where(p => p.practice_lab === true)\n  .map(p => `[[${p.file.name}]]`)",
            "allowUnknownValues": false
          }
        },
        {
          "name": "rehearsal_mode",
          "label": "Rehearsal Mode",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "select",
            "source": "fixed",
            "options": [
              {
                "value": "Live Rehearsal",
                "label": "Live Rehearsal"
              },
              {
                "value": "Live Rehearsal & Coaching",
                "label": "Live Rehearsal & Coaching"
              }
            ]
          }
        },
        {
          "name": "meta_skills",
          "label": "Meta Skills",
          "description": "",
          "isRequired": false,
          "condition": {
            "dependencyName": "rehearsal_mode",
            "type": "contains",
            "value": "Coaching"
          },
          "input": {
            "type": "multiselect",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üó∫Ô∏è Skill Maps/üß¨ Meta Skills"
          }
        },
        {
          "name": "core_skills",
          "label": "Core Skills",
          "description": "",
          "isRequired": false,
          "condition": {
            "dependencyName": "rehearsal_mode",
            "type": "contains",
            "value": "Coaching"
          },
          "input": {
            "type": "multiselect",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üó∫Ô∏è Skill Maps/üó£Ô∏è Core Skills"
          }
        }
      ],
      "version": "1",
      "template": {
        "createInsertCommand": false,
        "createNoteCommand": true,
        "parsedTemplate": []
      }
    },
    {
      "title": "New Coaching Session",
      "name": "Create New Coaching Session",
      "fields": [
        {
          "name": "practice_log",
          "label": "Select Practice Session",
          "description": "",
          "isRequired": true,
          "input": {
            "type": "select",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üé¨ Practice Logs"
          }
        },
        {
          "name": "people",
          "label": "People Involved",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "dataview",
            "query": "dv.pages('\"Personal/üë§ People\"')\n  .where(p => p.practice_lab === true)\n  .map(p => `[[${p.file.name}]]`)",
            "allowUnknownValues": false
          }
        },
        {
          "name": "rehearsal_mode",
          "label": "Rehearsal Mode",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "select",
            "source": "fixed",
            "options": [
              {
                "value": "Coaching Session",
                "label": "Coaching Session"
              },
              {
                "value": "Live Rehearsal & Coaching",
                "label": "Live Rehearsal & Coaching"
              }
            ]
          }
        },
        {
          "name": "meta_skills",
          "label": "Meta Skills",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üó∫Ô∏è Skill Maps/üß¨ Meta Skills"
          }
        },
        {
          "name": "core_skills",
          "label": "Core Skills",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "notes",
            "folder": "ME/üß™ Practice Lab/üó∫Ô∏è Skill Maps/üó£Ô∏è Core Skills"
          }
        }
      ],
      "version": "1",
      "template": {
        "createInsertCommand": false,
        "createNoteCommand": true,
        "parsedTemplate": []
      }
    },
    {
      "title": "Create New Inner Check-In",
      "name": "Create New Inner Check-In",
      "fields": [
        {
          "name": "past",
          "label": "Past",
          "description": "Did this event occur in the past? ",
          "isRequired": false,
          "input": {
            "type": "toggle",
            "hidden": false
          }
        },
        {
          "name": "date_time",
          "label": "Date/Time",
          "description": "When did this event occur? ",
          "isRequired": false,
          "condition": {
            "dependencyName": "past",
            "type": "boolean",
            "value": true
          },
          "input": {
            "type": "datetime",
            "hidden": false
          }
        },
        {
          "name": "context",
          "label": "Context/Title",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "text",
            "hidden": false
          }
        },
        {
          "name": "driver",
          "label": "Driver",
          "description": "Who inside is driving the car right now? ",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "fixed",
            "multi_select_options": [
              "The Boy",
              "The Pleaser",
              "The Protector",
              "The Performer",
              "Court Jester",
              "The Ghost (emotionally absent)",
              "The Defender (argumentative, reactive, logical combat mode)",
              "The Fixer",
              "The Parent (caring for others at your own expense)",
              "The Student (eager to learn, curious)",
              "The Becoming Man (integrated, values-aligned self)"
            ],
            "allowUnknownValues": false
          }
        },
        {
          "name": "motive",
          "label": "Motive",
          "description": "What is the motive behind the action?",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "fixed",
            "multi_select_options": [
              "Avoid Conflict",
              "Seek Connection",
              "Earn Love",
              "Secure Safety (emotional safety or relational stability)",
              "Get It Right (give the 'correct' answer)",
              "Minimize Damage",
              "Fix The Problem",
              "Make Her Feel Better",
              "Protect Myself",
              "Defend My Truth",
              "Speak From Integrity",
              "Show Care",
              "Hold Emotional Ground",
              "Stay Regulated"
            ],
            "allowUnknownValues": false
          }
        },
        {
          "name": "response_alignment",
          "label": "Response Alignment",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "select",
            "source": "fixed",
            "options": [
              {
                "value": "‚úÖ Fully Aligned",
                "label": "‚úÖ Fully Aligned"
              },
              {
                "value": "‚ö†Ô∏è Right Words, Wrong Motive",
                "label": "‚ö†Ô∏è Right Words, Wrong Motive"
              },
              {
                "value": "‚ùå Misaligned / Self-Abandoning",
                "label": "‚ùå Misaligned / Self-Abandoning"
              }
            ]
          }
        },
        {
          "name": "people",
          "label": "People",
          "description": "Who was involved in this situation? ",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "dataview",
            "query": "dv.pages('\"Personal/üë§ People\"')\n  .where(p => p.practice_lab === true)\n  .map(p => `[[${p.file.name}]]`)",
            "allowUnknownValues": false
          }
        },
        {
          "name": "emotions",
          "label": "Emotions",
          "description": "What emotions did you feel during this?",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "dataview",
            "query": "dv.pages('\"ME/üèõÔ∏è Foundations/üé≠ Emotions\"').file.name",
            "allowUnknownValues": false
          }
        }
      ],
      "version": "1"
    },
    {
      "title": "Create New Scenario",
      "name": "Create New Scenario",
      "fields": [
        {
          "name": "title",
          "label": "Title",
          "description": "A brief description of the scenario that occured",
          "isRequired": false,
          "input": {
            "type": "text",
            "hidden": false
          }
        },
        {
          "name": "people",
          "label": "People",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "multiselect",
            "source": "dataview",
            "query": "dv.pages('\"Personal/üë§ People\"')\n  .where(p => p.practice_lab === true)\n  .map(p => `[[${p.file.name}]]`)",
            "allowUnknownValues": false,
            "multi_select_options": []
          }
        },
        {
          "name": "type",
          "label": "Scenario Type",
          "description": "",
          "isRequired": false,
          "input": {
            "type": "select",
            "source": "fixed",
            "options": [
              {
                "value": "Mirroring",
                "label": "Mirroring"
              },
              {
                "value": "Validation",
                "label": "Validation"
              },
              {
                "value": "Conflict Repair",
                "label": "Conflict Repair"
              },
              {
                "value": "Boundaries",
                "label": "Boundaries"
              },
              {
                "value": "Emotional Disclosure",
                "label": "Emotional Disclosure"
              },
              {
                "value": "Trigger Navigation",
                "label": "Trigger Navigation"
              },
              {
                "value": "Presence Under Pressure",
                "label": "Presence Under Pressure"
              },
              {
                "value": "Vulnerability Response",
                "label": "Vulnerability Response"
              },
              {
                "value": "Listening Without Fixing",
                "label": "Listening Without Fixing"
              },
              {
                "value": "Emotional Containment",
                "label": "Emotional Containment"
              },
              {
                "value": "Partnering Instead of Defending",
                "label": "Partnering Instead of Defending"
              },
              {
                "value": "Staying With The Moment",
                "label": "Staying With The Moment"
              },
              {
                "value": "Shame De-Escalation",
                "label": "Shame De-Escalation"
              },
              {
                "value": "Holding Space",
                "label": "Holding Space"
              },
              {
                "value": "Masked Vulnerability",
                "label": "Masked Vulnerability"
              },
              {
                "value": "Emotional Subtext Listening",
                "label": "Emotional Subtext Listening"
              }
            ]
          }
        },
        {
          "name": "summary",
          "label": "Summary",
          "description": "What actually happened? ",
          "isRequired": false,
          "input": {
            "type": "text",
            "hidden": false
          }
        }
      ],
      "version": "1"
    }
  ]
}